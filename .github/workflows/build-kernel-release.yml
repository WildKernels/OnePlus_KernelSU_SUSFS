name: Build and Release OnePlus ACE 5 Kernel

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      android14-6_1_susfs_branch:
        description: "Choose SusFS Branch for android14-6.1"
        type: string
        default: "gki-android14-6.1"
      power_saving_mode:
        description: "Enable Power Saving Mode (30% performance reduction)"
        required: true
        type: boolean
        default: false
      cpu_governor:
        description: "Choose CPU Governor for Power Saving"
        required: false
        type: choice
        options:
          - powersave
          - conservative
          - ondemand
          - performance
        default: conservative

jobs:
  build-ace5:
    name: build-ace5 (OP-ACE-5, pineapple, oneplus/sm8650, oneplus_ace5.xml, android14, 6.1, ${{ inputs.ksun_branch }})
    runs-on: ubuntu-latest
    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          KERNEL_STRING="android14-6.1"
          SUSFS_BRANCH="${{ inputs.android14-6_1_susfs_branch }}"
          
          if [[ -z "$SUSFS_BRANCH" ]]; then
            SUSFS_BRANCH="gki-android14-6.1"
          fi
          
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure Power Saving Settings
        if: ${{ inputs.power_saving_mode }}
        run: |
          echo "=== Configuring Power Saving Mode ==="
          echo "Power saving mode enabled - reducing performance by ~30%"
          
          # Táº¡o file cáº¥u hÃ¬nh power saving
          cat > power_saving_config.sh << 'EOF'
          #!/bin/bash
          
          # CPU Frequency scaling settings
          export POWER_SAVING_MODE=1
          export CPU_GOVERNOR="${{ inputs.cpu_governor }}"
          export CPU_MAX_FREQ_SCALE=70  # Giáº£m 30% táº§n sá»‘ tá»‘i Ä‘a
          export CPU_MIN_FREQ_SCALE=30  # Giáº£m táº§n sá»‘ tá»‘i thiá»ƒu
          
          # Kernel compilation flags for power saving
          export POWER_SAVE_CFLAGS="-Os -ffunction-sections -fdata-sections"
          export POWER_SAVE_LDFLAGS="-Wl,--gc-sections"
          
          # Disable high-performance features
          export DISABLE_CPU_BOOST=1
          export ENABLE_POWER_EFFICIENT_WQ=1
          export REDUCE_TIMER_FREQ=1
          
          echo "Power saving configuration applied"
          echo "CPU Governor: $CPU_GOVERNOR"
          echo "Max CPU Frequency Scale: $CPU_MAX_FREQ_SCALE%"
          echo "Min CPU Frequency Scale: $CPU_MIN_FREQ_SCALE%"
          EOF
          
          chmod +x power_saving_config.sh
          ./power_saving_config.sh

      - name: Apply Power Saving Kernel Config
        if: ${{ inputs.power_saving_mode }}
        run: |
          echo "=== Applying Power Saving Kernel Configuration ==="
          
          # Táº¡o file defconfig patch cho power saving
          cat > power_saving_defconfig.patch << 'EOF'
          # Power Management Configuration
          CONFIG_PM=y
          CONFIG_PM_SLEEP=y
          CONFIG_PM_RUNTIME=y
          CONFIG_PM_ADVANCED_DEBUG=y
          CONFIG_PM_TRACE_RTC=y
          CONFIG_PM_CLK=y
          CONFIG_PM_GENERIC_DOMAINS=y
          CONFIG_PM_GENERIC_DOMAINS_SLEEP=y
          CONFIG_PM_GENERIC_DOMAINS_OF=y
          CONFIG_PM_OPP=y
          CONFIG_PM_DEVFREQ=y
          CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND=y
          CONFIG_DEVFREQ_GOV_PERFORMANCE=y
          CONFIG_DEVFREQ_GOV_POWERSAVE=y
          CONFIG_DEVFREQ_GOV_USERSPACE=y
          CONFIG_DEVFREQ_GOV_PASSIVE=y
          
          # CPU Frequency Scaling
          CONFIG_CPU_FREQ=y
          CONFIG_CPU_FREQ_GOV_POWERSAVE=y
          CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
          CONFIG_CPU_FREQ_GOV_ONDEMAND=y
          CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE=y
          # CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
          
          # Power Efficient Workqueues
          CONFIG_WQ_POWER_EFFICIENT_DEFAULT=y
          
          # Reduce Timer Frequency
          CONFIG_HZ_100=y
          # CONFIG_HZ_250 is not set
          # CONFIG_HZ_300 is not set
          # CONFIG_HZ_1000 is not set
          CONFIG_HZ=100
          
          # Disable CPU Boost
          # CONFIG_CPU_BOOST is not set
          # CONFIG_SCHED_CORE_CTL is not set
          
          # Memory Power Management
          CONFIG_MEMORY_HOTPLUG=y
          CONFIG_MEMORY_HOTREMOVE=y
          CONFIG_BALLOON_COMPACTION=y
          
          # Thermal Management
          CONFIG_THERMAL=y
          CONFIG_THERMAL_GOV_POWER_ALLOCATOR=y
          CONFIG_CPU_THERMAL=y
          CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS=1000
          
          # Disable High Performance Features
          # CONFIG_SCHED_AUTOGROUP is not set
          # CONFIG_SCHED_TUNE is not set
          # CONFIG_CGROUP_SCHEDTUNE is not set
          EOF
          
          echo "Power saving defconfig patch created"

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: OP-ACE-5
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_ace5.xml
          android_version: android14
          kernel_version: "6.1"
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}
          power_saving_mode: ${{ inputs.power_saving_mode }}
          power_saving_config: ${{ inputs.power_saving_mode && 'power_saving_defconfig.patch' || '' }}

      - name: Generate Power Saving Report
        if: ${{ inputs.power_saving_mode }}
        run: |
          echo "=== Power Saving Build Report ===" > power_saving_report.txt
          echo "Build completed with power saving optimizations" >> power_saving_report.txt
          echo "Expected performance reduction: ~30%" >> power_saving_report.txt
          echo "Expected battery life improvement: ~20-25%" >> power_saving_report.txt
          echo "CPU Governor: ${{ inputs.cpu_governor }}" >> power_saving_report.txt
          echo "Build date: $(date)" >> power_saving_report.txt
          echo "" >> power_saving_report.txt
          echo "Power Saving Features Applied:" >> power_saving_report.txt
          echo "- Reduced CPU frequency scaling" >> power_saving_report.txt
          echo "- Power efficient workqueues enabled" >> power_saving_report.txt
          echo "- Conservative CPU governor as default" >> power_saving_report.txt
          echo "- Reduced timer frequency (100Hz)" >> power_saving_report.txt
          echo "- CPU boost disabled" >> power_saving_report.txt
          echo "- Enhanced thermal management" >> power_saving_report.txt
          echo "- Memory power management optimizations" >> power_saving_report.txt
          
          cat power_saving_report.txt

      - name: Upload Power Saving Report
        if: ${{ inputs.power_saving_mode }}
        uses: actions/upload-artifact@v4
        with:
          name: power-saving-report
          path: power_saving_report.txt

  trigger-release:
    needs:
      - build-ace5
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* OnePlus ACE 5 Kernel With KernelSU Next & SUSFS v1.5.8+ ${{ inputs.power_saving_mode && '(Power Saving Mode)' || '' }} *TEST BUILD*"
      RELEASE_NOTES: |
        This release contains KernelSU Next and SUSFS v1.5.8+ for OnePlus ACE 5
        ${{ inputs.power_saving_mode && '
        
        ðŸ”‹ POWER SAVING MODE ENABLED
        - Performance reduced by ~30% for better battery life
        - CPU Governor: ${{ inputs.cpu_governor }}
        - Optimized for extended battery usage
        ' || '' }}
        
        Module: 
        -> https://github.com/sidex15/ksu_module_susfs

        Non-Official Managers:
        -> https://github.com/KernelSU-Next/KernelSU-Next

        Features:
        [+] KernelSU-Next
        [+] SUSFS v1.5.8+
        [+] Wireguard Support
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Magic Mount Support
        [+] Ptrace message leak fix for kernels < 5.16
        [+] CMD_SUSFS_HIDE_SUS_MNTS_FOR_ALL_PROCS Support for all kernels.
        [+] Manual Hooks [scope_min_manual_hooks_v1.4]
        [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
        [+] BBR v1 Support.
        ${{ inputs.power_saving_mode && '[+] Power Saving Optimizations (30% performance reduction)' || '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.8-r0"
          POWER_SAVE_SUFFIX="${{ inputs.power_saving_mode && '-powersave' || '' }}"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          NEW_TAG="${NEW_TAG}${POWER_SAVE_SUFFIX}"
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: true
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/kernel-*/*; do
              if [ -d "$file" ]; then
                  continue
              fi
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
          done
          
          # Upload power saving report if exists
          if [ -f "./downloaded-artifacts/power-saving-report/power_saving_report.txt" ]; then
              echo "Uploading power saving report..."
              gh release upload ${{ env.NEW_TAG }} "./downloaded-artifacts/power-saving-report/power_saving_report.txt"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
